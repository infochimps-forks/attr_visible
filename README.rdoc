= AttrVisible
===========

Adds a macro +attr_visible+

Attributes named in this macro are suggested to be non-visible to the outside world.

== !! Please be aware !!

Nothing currently enforces these instructions in general. Only the following
exclusions are applied:

* The various serialization methods (+to_xml+, +to_json+, etc.) are
  monkeypatched to, by default, exclude these attributes.

* That's it, actually.

---------------------------------------------------------------------------

== Example

<code><pre>
class User
  # User has attributes name, email, password; and has_many roles.
  
  # We want the user to be able to modify her name and email, but not
  # roles.
  attr_accessible       :name, :email, :password

  # The to_xml, to_json, etc will show a user's id, name, and roles -- 
  attr_visible          :id,   :name,  :roles
  # and additionally the value given by the num_posts
  serialize_defaults    :methods => :num_posts

  #  number of posts by this user
  def num_posts
    # ... do stuff ...
  end
end
</pre></code>

Then we would get

<code><pre>
  user = User.new("name" => "David", "email" => "foo@bar.com", "password" => "monkey")
  user.to_json # {"user": { "id":1, "name":"David", "email":"foo@bar.com" } }
</pre></code>

---------------------------------------------------------------------------
---------------------------------------------------------------------------

Copyright (c) 2008 Philip (flip) Kromer for infochimps.org
Released under the MIT license
